extern crate piston_window;
mod components;

use piston_window::*;
use components::{ SceneObject, GUIButton, Calculator };

main := None => Void: {
	PistonWindow * Mut: window = WindowSettings::new("Hello Calculator", [640, 480])
			.exit_on_esc(true).build().unwrap();
  
	Calculator * Mut: main =
		Calculator { 
			buttons: [
				Box ( GUIButton { coords: [0.0  , 0.0  , 100.0, 100.0], color: [1.0, 0.0, 0.0, 1.0], clicked: false, id: 0 } ),
				Box ( GUIButton { coords: [0.0  , 200.0, 100.0, 100.0], color: [1.0, 0.0, 0.0, 1.0], clicked: false, id: 1 } )
			],
			buffer: "".to_string()
		};
	
	Option{[f64 ; 2]} * Mut: mousePos = None;
	Bool * Mut: click = false;

	while Some(event) = window.next() {

		#-- game logic

		if Some(pos) = event.mouse_cursor_args() {
			mousePos <- Some(pos);
		};
		if Some(button) = event.release_args() {
			if button == Button::Mouse(MouseButton::Left) {
				click <- true;
			};	
		};

		if Some(args) = event.update_args() {

			extra := {
				dt <- args.dt,
				clicked <- click,
				mousePos <- mousePos,
			};

			click <- false;

			main.update(Ref(event), Ref(extra));
		};

		if Some(_args) = event.render_args() {

			window.draw_2d(Ref(event), (context, graphics, device => {

				clear([0.2, 0.2, 0.2, 1.0], graphics);

				main.render(Ref(context), graphics);
			}));

		};
	};
};

